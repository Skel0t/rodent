struct NNInt {
    matmul : fn(Matrix, Matrix, fn(i32) -> f32, fn(f32) -> f32, Buffer, i64) -> Matrix,
    im2col : fn(i32, i32, i32, i32, i32, i32, AccM, i32, Buffer, i64) -> Matrix,
    pool   : fn(Matrix, i32, fn(fn(i32) -> f32) -> f32, Buffer, i64) -> Matrix,
    // nearest : fn(Matrix, Buffer, i64) -> Matrix, // UNUSED; USING ACCESSOR
    add_element_wise : fn(Matrix, AccM, Buffer, i64) -> Matrix,
    chw_to_hwc : fn(Matrix, Buffer, i64) -> Matrix
}

fn @get_cpu_nn() -> NNInt {
    NNInt {
        matmul     = matmul_cpu,
        im2col     = im2col_cpu,
        pool       = pool_cpu,
        // nearest    = nearest_cpu,
        add_element_wise = add_element_wise_cpu,
        chw_to_hwc = chw_to_hwc_cpu
    }
}

fn @get_oneapi_nn() -> NNInt {
    NNInt {
        matmul     = matmul_oneapi,
        im2col     = im2col_cpu,
        pool       = pool_cpu,
        // nearest    = nearest_cpu,
        add_element_wise = add_element_wise_cpu,
        chw_to_hwc = chw_to_hwc_cpu
    }
}

fn @get_cuda_nn() -> NNInt {
    NNInt {
        matmul     = matmul_gpu,
        im2col     = im2col_gpu,
        pool       = pool_gpu,
        // nearest    = NOT_IMPLEMENTED,
        add_element_wise = add_element_wise_gpu,
        chw_to_hwc = chw_to_hwc_gpu
    }
}

fn @get_cublas_nn() -> NNInt {
    NNInt {
        matmul     = matmul_cublas,
        im2col     = im2col_gpu,
        pool       = pool_gpu,
        // nearest    = NOT_IMPLEMENTED,
        add_element_wise = add_element_wise_gpu,
        chw_to_hwc = chw_to_hwc_gpu
    }
}

fn @get_cublaslt_nn() -> NNInt {
    NNInt {
        matmul     = matmul_cublaslt,
        im2col     = im2col_gpu,
        pool       = pool_gpu,
        // nearest    = NOT_IMPLEMENTED,
        add_element_wise = add_element_wise_gpu,
        chw_to_hwc = chw_to_hwc_gpu
    }
}
